# Generated by Django 3.0.5 on 2020-08-28 13:41

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=32, unique=True, verbose_name='사용자명')),
                ('password', models.CharField(max_length=32, verbose_name='비밀번호')),
                ('registered_dttm', models.DateTimeField(auto_now_add=True, verbose_name='등록시간')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'Users',
                'db_table': 'Users',
            },
        ),
        migrations.CreateModel(
            name='Strategy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('strategyName', models.CharField(max_length=128, verbose_name='전략명')),
                ('strategyNumber', models.IntegerField(unique=True, verbose_name='전략고유번호')),
                ('strategyDescription', models.TextField(verbose_name='전략설명')),
                ('strategyStar', models.IntegerField(verbose_name='별점')),
                ('investment', models.IntegerField(verbose_name='투자원금')),
                ('investment_Start', models.IntegerField(verbose_name='투자 시작일')),
                ('investment_End', models.IntegerField(verbose_name='투자 마감일')),
                ('maxStockNumber', models.IntegerField(verbose_name='최대 보유 종목수')),
                ('userMarketCap', models.IntegerField(verbose_name='대상기업 최소시가총액')),
                ('userROE', models.IntegerField(blank=True, verbose_name='최저 ROE')),
                ('userROA', models.IntegerField(blank=True, verbose_name='최저 ROA')),
                ('userSalesPerProfit', models.IntegerField(blank=True, verbose_name='매출액대비 순이익률')),
                ('userSalesPerMargin', models.IntegerField(blank=True, verbose_name='매출액 대비 영업이익률')),
                ('userSalesIncrese', models.IntegerField(blank=True, verbose_name='매출액 증가율')),
                ('userMarginIncrease', models.IntegerField(blank=True, verbose_name='영업이익 증가율')),
                ('userProfitIncrease', models.IntegerField(blank=True, verbose_name='순이익 증가율')),
                ('userDebtRatio', models.IntegerField(blank=True, verbose_name='부채비율')),
                ('userCurrentRatio', models.IntegerField(blank=True, verbose_name='유동비율')),
                ('userOperatingActivityCashFlow', models.BooleanField(blank=True, verbose_name='영업활동현금흐름')),
                ('userInvestmentActivityCashFlow', models.BooleanField(blank=True, verbose_name='투자활동현금흐름')),
                ('userFinancialActivityCashFlow', models.BooleanField(blank=True, verbose_name='재무활동현금흐름')),
                ('userEPS_Start', models.IntegerField(blank=True, verbose_name='주당순이익(min)')),
                ('userEPS_End', models.IntegerField(blank=True, verbose_name='주당순이익(max)')),
                ('userBPS_Start', models.IntegerField(blank=True, verbose_name='주당순자산(min)')),
                ('userBPS_End', models.IntegerField(blank=True, verbose_name='주당순자산(max)')),
                ('userCFPS_Start', models.IntegerField(blank=True, verbose_name='주당현금흐름(min)')),
                ('userCFPS_End', models.IntegerField(blank=True, verbose_name='주당현금흐름(max)')),
                ('userSPS_Start', models.IntegerField(blank=True, verbose_name='주당매출액(min)')),
                ('userSPS_End', models.IntegerField(blank=True, verbose_name='주당매출액(max)')),
                ('userDPS_Start', models.IntegerField(blank=True, verbose_name='주당배당금(min)')),
                ('userDPS_End', models.IntegerField(blank=True, verbose_name='주당배당금(max)')),
                ('userPER_Start', models.IntegerField(blank=True, verbose_name='주가수익배수(min)')),
                ('userPER_End', models.IntegerField(blank=True, verbose_name='주가수익배수(max)')),
                ('userPBR_Start', models.IntegerField(blank=True, verbose_name='주가순자산배수(min)')),
                ('userPBR_End', models.IntegerField(blank=True, verbose_name='주가순자산배수(max)')),
                ('userPCR_Start', models.IntegerField(blank=True, verbose_name='주가현금흐름배수(min)')),
                ('userPCR_End', models.IntegerField(blank=True, verbose_name='주가현금흐름배수(max)')),
                ('userPSR_Start', models.IntegerField(blank=True, verbose_name='주가매출액배수(min)')),
                ('userPSR_End', models.IntegerField(blank=True, verbose_name='주가매출액배수(max)')),
                ('userMarketDiviend_Start', models.IntegerField(blank=True, verbose_name='시가 배당률(min)')),
                ('userMarketDiviend_End', models.IntegerField(blank=True, verbose_name='시가 배당률(max)')),
                ('purchaseCondition', models.IntegerField(verbose_name='매수조건(%)')),
                ('targetPrice', models.IntegerField(verbose_name='목표가격')),
                ('sellPrice', models.IntegerField(verbose_name='손절가격')),
                ('revalancingPeriod', models.IntegerField(verbose_name='리벨런싱 주기 ( 0:분기별 | 1:연간 | 2:선택안함 )')),
                ('strategyOpenedInPlatform', models.BooleanField(blank=True, verbose_name='플랫폼에 오픈하기')),
                ('writerName', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apis.User', verbose_name='전략작성자명')),
            ],
            options={
                'verbose_name': 'Strategy',
                'verbose_name_plural': 'Strategy',
                'db_table': 'Strategy',
            },
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profit_all', models.IntegerField(verbose_name='총 손익')),
                ('currentAsset', models.IntegerField(verbose_name='현재자산')),
                ('Final_yield', models.IntegerField(verbose_name='최종수익률')),
                ('selected_companys', models.CharField(max_length=1024, verbose_name='선택된 종목 리스트')),
                ('Current_assets_by_date', models.TextField(blank=True, verbose_name='날짜별 현재 자산 정보')),
                ('Winning_rate', models.TextField(blank=True, verbose_name='승률 (익절한 횟수와 손절한 횟수 정보)')),
                ('Reavalanced_code_name_list', models.TextField(blank=True, verbose_name='리벨런싱한 종목 ( n번째 리벨런싱에 따른 종목 )')),
                ('strategy_result', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='apis.Strategy', to_field='strategyNumber', verbose_name='전략 고유번호당 결과')),
                ('writer_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apis.User', to_field='username', verbose_name='전략 작성자명')),
            ],
            options={
                'verbose_name': 'result',
                'verbose_name_plural': 'Results',
                'db_table': 'Results',
            },
        ),
    ]
